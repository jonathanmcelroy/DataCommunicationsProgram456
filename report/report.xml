<?xml version="1.0" encoding="UTF-8" standalone="yes"?><!DOCTYPE report PUBLIC "-//JACOCO//DTD Report 1.0//EN" "report.dtd"><report name="JaCoCo Ant Example"><sessioninfo id="jonathans-arch-8f6546d5" start="1415063122234" dump="1415063124777"/><sessioninfo id="jonathans-arch-d2a01b4b" start="1415064686587" dump="1415064687727"/><sessioninfo id="jonathans-arch-daf038f8" start="1415077512330" dump="1415077538628"/><package name="nudat/protocol/test"><class name="nudat/protocol/test/NuDatResponseTest"><method name="&lt;init&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="TestNuDatResponseConstructorNullBuffer" desc="()V"><counter type="INSTRUCTION" missed="6" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="TestNuDatResponseConstructorTooShort" desc="()V"><counter type="INSTRUCTION" missed="6" covered="9"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="TestNuDatResponseConstructorTooLong" desc="()V"><counter type="INSTRUCTION" missed="6" covered="12"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="TestNuDatResponseConstuctorBadErrorCode" desc="()V"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="TestNuDatResponseConstuctorBadQueryId" desc="()V"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="TestNuDatResponseConstuctorBadQueryId2" desc="()V"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="TestNuDatResponseConstuctorBadPosts" desc="()V"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="TestNuDatResponseGetPosts" desc="()V"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="TestNuDatResponseSetPosts" desc="()V"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="TestNuDatResponseSetBadPosts" desc="()V"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="TestNuDatResponseEncode" desc="()V"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="TestNuDatResponseToString" desc="()V"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getGoodResponse" desc="()[B"><counter type="INSTRUCTION" missed="0" covered="85"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="96" covered="192"/><counter type="COMPLEXITY" missed="5" covered="9"/><counter type="METHOD" missed="5" covered="9"/><counter type="CLASS" missed="0" covered="1"/></class><class name="nudat/protocol/test/NuDatQueryTest"><method name="&lt;init&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="TestNuDatQueryConstructorNullBuffer" desc="()V"><counter type="INSTRUCTION" missed="8" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="TestNuDatQueryConstructorTooShort" desc="()V"><counter type="INSTRUCTION" missed="9" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="TestNuDatQueryConstructorTooLong" desc="()V"><counter type="INSTRUCTION" missed="9" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="TestNuDatQueryConstuctorBadQueryId" desc="()V"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="TestNuDatQueryConstuctorBadQueryId2" desc="()V"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="TestNuDatQueryConstuctorBadReqestedPosts" desc="()V"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="TestNuDatQueryGetPosts" desc="()V"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="TestNuDatQuerySetPosts" desc="()V"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="TestNuDatQuerySetBadPosts" desc="()V"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="TestNuDatQueryEncode" desc="()V"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="TestNuDatQueryToString" desc="()V"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getGoodQuery" desc="()[B"><counter type="INSTRUCTION" missed="0" covered="37"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="61" covered="107"/><counter type="COMPLEXITY" missed="4" covered="9"/><counter type="METHOD" missed="4" covered="9"/><counter type="CLASS" missed="0" covered="1"/></class><counter type="INSTRUCTION" missed="157" covered="299"/><counter type="COMPLEXITY" missed="9" covered="18"/><counter type="METHOD" missed="9" covered="18"/><counter type="CLASS" missed="0" covered="2"/></package><package name="nudat/protocol"><class name="nudat/protocol/ErrorCode"><method name="values" desc="()[Lnudat/protocol/ErrorCode;"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="valueOf" desc="(Ljava/lang/String;)Lnudat/protocol/ErrorCode;"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;IILjava/lang/String;)V"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getErrorCode" desc="(I)Lnudat/protocol/ErrorCode;"><counter type="INSTRUCTION" missed="5" covered="10"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getErrorCodeValue" desc="()I"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getErrorMessage" desc="()Ljava/lang/String;"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="115"/><counter type="BRANCH" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="10" covered="146"/><counter type="BRANCH" missed="1" covered="3"/><counter type="COMPLEXITY" missed="2" covered="7"/><counter type="METHOD" missed="1" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="nudat/protocol/NuDatMessage"><method name="&lt;init&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getErrorCode" desc="()Lnudat/protocol/ErrorCode;"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getQueryId" desc="()J"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setQueryId" desc="(J)V"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="BRANCH" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setErrorCodeFromBuffer" desc="([B)V"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="writeErrorCodeToBuffer" desc="([B)V"><counter type="INSTRUCTION" missed="5" covered="12"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setQueryIdFromBuffer" desc="([B)V"><counter type="INSTRUCTION" missed="5" covered="10"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="writeQueryIdToBuffer" desc="([B)V"><counter type="INSTRUCTION" missed="5" covered="10"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="decode" desc="([B)Lnudat/protocol/NuDatMessage;"><counter type="INSTRUCTION" missed="55" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="readUnsignedInt" desc="([BI)J"><counter type="INSTRUCTION" missed="0" covered="37"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="writeUnsignedInt" desc="(J[BI)V"><counter type="INSTRUCTION" missed="0" covered="45"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="readUnsignedShort" desc="([BI)I"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="writeUnsignedShort" desc="(I[BI)V"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="91" covered="196"/><counter type="BRANCH" missed="11" covered="9"/><counter type="COMPLEXITY" missed="11" covered="14"/><counter type="METHOD" missed="4" covered="11"/><counter type="CLASS" missed="0" covered="1"/></class><class name="nudat/protocol/NuDatQuery"><method name="&lt;init&gt;" desc="([B)V"><counter type="INSTRUCTION" missed="5" covered="46"/><counter type="BRANCH" missed="1" covered="5"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(JI)V"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getRequestedPosts" desc="()I"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setRequestedPosts" desc="(I)V"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="BRANCH" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="encode" desc="()[B"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="26" covered="100"/><counter type="BRANCH" missed="1" covered="7"/><counter type="COMPLEXITY" missed="2" covered="8"/><counter type="METHOD" missed="1" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="nudat/protocol/NuDatException"><method name="&lt;init&gt;" desc="(Lnudat/protocol/ErrorCode;)V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lnudat/protocol/ErrorCode;Ljava/lang/Throwable;)V"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getErrorCode" desc="()Lnudat/protocol/ErrorCode;"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="9" covered="11"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="nudat/protocol/NuDatResponse"><method name="&lt;init&gt;" desc="([B)V"><counter type="INSTRUCTION" missed="16" covered="111"/><counter type="BRANCH" missed="3" covered="9"/><counter type="COMPLEXITY" missed="3" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lnudat/protocol/ErrorCode;JLjava/util/List;)V"><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getPosts" desc="()Ljava/util/List;"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setPosts" desc="(Ljava/util/List;)V"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="BRANCH" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setErrorCode" desc="(Lnudat/protocol/ErrorCode;)V"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setErrorCode" desc="(I)V"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="encode" desc="()[B"><counter type="INSTRUCTION" missed="0" covered="72"/><counter type="BRANCH" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="54" covered="221"/><counter type="BRANCH" missed="3" covered="13"/><counter type="COMPLEXITY" missed="5" covered="11"/><counter type="METHOD" missed="2" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><counter type="INSTRUCTION" missed="190" covered="674"/><counter type="BRANCH" missed="16" covered="32"/><counter type="COMPLEXITY" missed="21" covered="42"/><counter type="METHOD" missed="9" covered="30"/><counter type="CLASS" missed="0" covered="5"/></package><package name="nudat/app"><class name="nudat/app/NuDatClient"><method name="&lt;init&gt;" desc="()V"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="main" desc="([Ljava/lang/String;)V"><counter type="INSTRUCTION" missed="194" covered="0"/><counter type="BRANCH" missed="22" covered="0"/><counter type="COMPLEXITY" missed="12" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="sendQuery" desc="(Lnudat/protocol/NuDatQuery;Ljava/net/DatagramSocket;)V"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="220" covered="0"/><counter type="BRANCH" missed="22" covered="0"/><counter type="COMPLEXITY" missed="15" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="nudat/app/NuDatServer"><method name="&lt;init&gt;" desc="()V"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="main" desc="([Ljava/lang/String;)V"><counter type="INSTRUCTION" missed="101" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="sendResponse" desc="(Lnudat/protocol/NuDatResponse;Ljava/net/DatagramSocket;)V"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="105" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="nudat/app/NuDatCommunicate"><method name="&lt;init&gt;" desc="()V"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="receiveMessage" desc="(Ljava/net/DatagramSocket;)[B"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="nudat/app/MessageInput"><method name="&lt;init&gt;" desc="(Ljava/io/InputStream;)V"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="readAlphaNumberics" desc="()Ljava/lang/String;"><counter type="INSTRUCTION" missed="50" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="readBase64" desc="()[B"><counter type="INSTRUCTION" missed="57" covered="0"/><counter type="BRANCH" missed="16" covered="0"/><counter type="COMPLEXITY" missed="9" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="readFloat" desc="()F"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="readHash" desc="()Ljava/lang/String;"><counter type="INSTRUCTION" missed="57" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="readLine" desc="()Ljava/lang/String;"><counter type="INSTRUCTION" missed="35" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="readNewLine" desc="()Ljava/lang/String;"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="readNumeric" desc="()Ljava/lang/String;"><counter type="INSTRUCTION" missed="38" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="readSpace" desc="()C"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="readWord" desc="()Ljava/lang/String;"><counter type="INSTRUCTION" missed="35" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="peek" desc="()C"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="314" covered="0"/><counter type="BRANCH" missed="46" covered="0"/><counter type="COMPLEXITY" missed="34" covered="0"/><counter type="METHOD" missed="11" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="nudat/app/MessageOutput"><method name="&lt;init&gt;" desc="(Ljava/io/OutputStream;)V"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="write" desc="([B)V"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><counter type="INSTRUCTION" missed="679" covered="0"/><counter type="BRANCH" missed="76" covered="0"/><counter type="COMPLEXITY" missed="60" covered="0"/><counter type="METHOD" missed="22" covered="0"/><counter type="CLASS" missed="5" covered="0"/></package><counter type="INSTRUCTION" missed="1026" covered="973"/><counter type="BRANCH" missed="92" covered="32"/><counter type="COMPLEXITY" missed="90" covered="60"/><counter type="METHOD" missed="40" covered="48"/><counter type="CLASS" missed="5" covered="7"/></report>